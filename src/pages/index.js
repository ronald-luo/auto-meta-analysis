// next imports
import { useRouter } from 'next/router'
import { useState, useRef } from 'react';
import Head from 'next/head'
import Image from 'next/image'

// icons for upload area
import CloudUploadIcon from '@mui/icons-material/CloudUpload';
import ArrowForwardIcon from '@mui/icons-material/ArrowForward';
import PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';

// icons for goals section
import SpeedIcon from '@mui/icons-material/Speed';
import CheckCircleIcon from '@mui/icons-material/CheckCircle';
import TrendingUpIcon from '@mui/icons-material/TrendingUp';

// loading icons
import LinearProgress from '@mui/material/LinearProgress';
import CircularProgress from '@mui/material/CircularProgress';
import SmartToyIcon from '@mui/icons-material/SmartToy';

// styles
import styles from '@/styles/Home.module.css'


export default function Home() {
  const router = useRouter()
  const [files, setFiles] = useState([]);
  const [submitted, setSubmitted] = useState(false);

  const handleFileUpload = (event) => {
    setFiles(event.target.files);
    const newFiles = [...event.target.files];
    console.log('new files uploaded', newFiles)
  }

  const handleDrop = (event) => {
    event.preventDefault();
    const newFiles = [...event.dataTransfer.files];
    console.log('new files uploaded', newFiles)
    setFiles(newFiles);
  }

  const handleUploadClick = (event) => {
    event.stopPropagation();
    document.getElementById('file-upload').click();
  }
  
  const onSubmit = async (event) => {
    event.stopPropagation();
    
    switch (event.target.id) {
      case 'submit-arrow':
      case 'submit-button':
        event.preventDefault();

        if (files.length === 0) {
          alert('Please upload a file');
          return;
        }

        // set submitted to true to show loading icon
        setSubmitted(true);

        const formData = new FormData();

        // Append each file to the FormData object
        for (let i = 0; i < files.length; i++) {
          formData.append(`file${i}`, files[i]);
        }

        try {
          // Send a POST request to the server with the form data
          const response = await fetch('/api/meta-analysis', {
            method: 'POST',
            body: formData,
          });

          // Handle the response from the server
          const { extractedTexts } = await response.json()

          router.push({
            pathname: '/quality',
            query: { extractedTexts: JSON.stringify(extractedTexts) },
          })
        } catch (error) {
          console.error(error);
        }
        break;
      case 'file-upload':
        document.getElementById('file-upload').click();
        break;
    }
  };
  
  return (
    <>
      <Head>
        <title>meta-analysis automator</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {submitted && <LinearProgress color="secondary"/>}
      <h1 className={styles.h1}> 
        <SmartToyIcon className={styles.logo}/>
        Meta-Analysis Automator
      </h1>
      <p className={styles.p}>
        Upload your PDFs and we'll extract the text for you to assess the quality of your meta-analysis.
      </p>
      <div className={styles.uploadArea} onDrop={handleDrop} onDragOver={(e) => e.preventDefault()} onClick={handleUploadClick}>
        <CloudUploadIcon className={styles.uploadIcon}/>
        <p className={styles.filesQueued}>{files?.length || 0} files queued</p>
        
        <form className={styles.formContainer} onClick={onSubmit}>
          <button type="button" onClick={handleUploadClick}>
            <PictureAsPdfIcon className={styles.icon}/>
            <span>CHOOSE FILES</span>
          </button>

          <input id="file-upload" type="file" multiple onChange={handleFileUpload} style={{ display: 'none' }} />
          <button id="submit-button" type="button" onClick={onSubmit}>
            {(submitted === true) ? <CircularProgress className={styles.icon} color="secondary"/> : <ArrowForwardIcon className={styles.icon} id="submit-arrow"/>}
          </button>
        </form>
        
        <div className={styles.dropFilesText}>
          or drop files here
        </div>
      </div>

    <section className={styles.goalsSection}>
      <div className={styles.goalContainer}>
        <SpeedIcon className={styles.goalIcon}/>
        <p>Our web application streamlines the quality assessment process for meta-analyses, enabling researchers to assess the quality studies in a fraction of the time it would take using traditional methods.</p>
      </div>
      <div className={styles.goalContainer}>
        <CheckCircleIcon className={styles.goalIcon}/>
        <p>By integrating the OpenAI API and ChatGPT, our application provides more accurate and consistent quality assessments compared to manual methods, improving the reliability of meta-analytic results.</p>
      </div>
      <div className={styles.goalContainer}>
        <TrendingUpIcon className={styles.goalIcon}/>
        <p>With our application, researchers can focus on analyzing the results of their meta-analyses rather than spending countless hours on quality assessment, accelerating the pace of scientific discovery and innovation.</p>
      </div>
    </section>
    </>
  )
}
